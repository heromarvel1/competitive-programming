#include <bits/stdc++.h>

using namespace std;
int fipos(int arr[],int n,int k)
{
    int s = 0, e = n-1;

    while(s <= e)
    {
        int mid = s + (e - s) / 2;


        if(arr[mid] == k &&  ( mid == 0 || arr[mid-1] < k))
            return mid;
        else if(arr[mid] == k || arr[mid] > k )
            e = mid-1;

        else s = mid+1;
    }

    return -1;
}
int lapos(int arr[],int n,int k)
{
    int s = 0, e = n-1;

    while(s <= e)
    {
        int mid = s + (e - s) / 2;

        if(arr[mid] == k &&  ( mid == n-1 || arr[mid + 1] > k))
            return mid;
        else if(arr[mid] == k || arr[mid] < k )
            s = mid+1;
        else e = mid-1;
    }

    return -1;
}
int count(int arr[],int n,int k)
{
    int f_index = fipos(arr,n,k);

    if(f_index == -1)
        return 0;

    int l_index = lapos(arr,n,k);

    return l_index - f_index + 1;

}

int main()
{

    int arr[] = {1,1,2,2,2,2,3};
    int n = sizeof(arr)/sizeof(arr[0]);
    cout<<count(arr,n,3)<<endl;


    return 0;
}
